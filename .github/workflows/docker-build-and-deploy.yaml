---
name: Continuous Integration & Deployment

on:
  push:
  # At 03:27 on Monday
  schedule:
    - cron: '27 3 * * 1'

env:
  image_name: simple-samba-shares

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      # -----------------------------------------------------------------------
      # General setup
      # -----------------------------------------------------------------------
      - name: Check out the repo
        uses: actions/checkout@v2

      # -----------------------------------------------------------------------
      # Code Quality
      # -----------------------------------------------------------------------
      - name: Run Super-Linter
        uses: github/super-linter@v4.2.2
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # -----------------------------------------------------------------------
      # Setup Docker
      # -----------------------------------------------------------------------
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: |
            image=moby/buildkit:v0.7.2
            network=host

      # -----------------------------------------------------------------------
      # Localhost
      # -----------------------------------------------------------------------
      - name: Docker meta (Local registry)
        id: docker_metadata_localhost
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: localhost:5000/${{ env.image_name }}
          tag-sha: true

      - name: Push to GitHub Packages (Local)
        id: docker_build_localhost
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          labels: ${{ steps.docker_metadata_localhost.outputs.labels }}
          platforms: ${{ steps.qemu.outputs.platforms }}
          push: true
          tags: ${{ steps.docker_metadata_localhost.outputs.tags }}

      # -----------------------------------------------------------------------
      # Smoke test
      # -----------------------------------------------------------------------
      - name: Start container for smoke test
        id: create_container
        run: echo "::set-output name=container_id::$(docker run --detach localhost:5000/${{ env.image_name }}@${{ steps.docker_build_localhost.outputs.digest }})"
      # TODO - Add tests...
      - name: Stop smoke test container
        run: docker stop ${{ steps.create_container.outputs.container_id }}

      # -----------------------------------------------------------------------
      # Release to public registry
      # -----------------------------------------------------------------------
      - name: Set release information
        run: |
          if [[ ($GITHUB_REF =~ \/v[0-9]\.[0-9]+\.[0-9]+$) && ($GITHUB_EVENT_NAME != 'pull_request') ]]; then
            echo 'IS_RELEASE=TRUE' >> $GITHUB_ENV
            echo "RELEASE_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          else
            echo 'IS_RELEASE=FALSE' >> $GITHUB_ENV
            echo 'RELEASE_NAME=' >> $GITHUB_ENV
          fi
      - name: Display release information
        run: |
          echo "IS_RELEASE=$IS_RELEASE"
          echo "RELEASE_NAME=$RELEASE_NAME"
      - name: Login to GitHub Container Registry
        if: env.IS_RELEASE == 'TRUE'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta (Docker Hub)
        if: env.IS_RELEASE == 'TRUE'
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: pedrohdz/${{ env.image_name }}
          tag-sha: true

      - name: Push to GitHub Packages
        if: env.IS_RELEASE == 'TRUE'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          labels: ${{ steps.docker_meta.outputs.labels }}
          platforms: ${{ steps.qemu.outputs.platforms }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

...
